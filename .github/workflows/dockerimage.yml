name: Test Docker image

on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build the Docker image
        run: |
          echo "3.0 with Node.js 16"
          docker run -i $(docker build -q 3.0/16) /bin/sh -c "ruby --version && node --version && npm --version"
          echo "3.0 slim with Node.js 16"
          docker run -i $(docker build -q 3.0/16/slim) /bin/sh -c "ruby --version && node --version && npm --version"
          echo "3.0 alpine with Node.js 16"
          docker run -i $(docker build -q 3.0/16/alpine) /bin/sh -c "ruby --version && node --version && npm --version"
          echo "3.0 with Node.js 18"
          docker run -i $(docker build -q 3.0/18) /bin/sh -c "ruby --version && node --version && npm --version"
          echo "3.0 slim with Node.js 18"
          docker run -i $(docker build -q 3.0/18/slim) /bin/sh -c "ruby --version && node --version && npm --version"
          echo "3.0 alpine with Node.js 18"
          docker run -i $(docker build -q 3.0/18/alpine) /bin/sh -c "ruby --version && node --version && npm --version"

          echo "3.1 with Node.js 16"
          docker run -i $(docker build -q 3.1/16) /bin/sh -c "ruby --version && node --version && npm --version"
          echo "3.1 slim with Node.js 16"
          docker run -i $(docker build -q 3.1/16/slim) /bin/sh -c "ruby --version && node --version && npm --version"
          echo "3.1 alpine with Node.js 16"
          docker run -i $(docker build -q 3.1/16/alpine) /bin/sh -c "ruby --version && node --version && npm --version"
          echo "3.1 with Node.js 18"
          docker run -i $(docker build -q 3.1/18) /bin/sh -c "ruby --version && node --version && npm --version"
          echo "3.1 slim with Node.js 18"
          docker run -i $(docker build -q 3.1/18/slim) /bin/sh -c "ruby --version && node --version && npm --version"
          echo "3.1 alpine with Node.js 18"
          docker run -i $(docker build -q 3.1/18/alpine) /bin/sh -c "ruby --version && node --version && npm --version"

          echo "3.2 with Node.js 16"
          docker run -i $(docker build -q 3.2/16) /bin/sh -c "ruby --version && node --version && npm --version"
          echo "3.2 slim with Node.js 16"
          docker run -i $(docker build -q 3.2/16/slim) /bin/sh -c "ruby --version && node --version && npm --version"
          echo "3.2 alpine with Node.js 16"
          docker run -i $(docker build -q 3.2/16/alpine) /bin/sh -c "ruby --version && node --version && npm --version"
          echo "3.2 with Node.js 18"
          docker run -i $(docker build -q 3.2/18) /bin/sh -c "ruby --version && node --version && npm --version"
          echo "3.2 slim with Node.js 18"
          docker run -i $(docker build -q 3.2/18/slim) /bin/sh -c "ruby --version && node --version && npm --version"
          echo "3.2 alpine with Node.js 18"
          docker run -i $(docker build -q 3.2/18/alpine) /bin/sh -c "ruby --version && node --version && npm --version"

  auto-merge:
    runs-on: ubuntu-latest
    needs: build

    permissions:
      pull-requests: write
      contents: write

    steps:
      - name: Automatically merge dependabot upgrades
        uses: fastify/github-action-merge-dependabot@v3
        with:
          target: minor
